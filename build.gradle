import java.text.SimpleDateFormat

// tag::versions[]
buildscript {
	dependencies {
		apply from: "versions.gradle"

		def depMgmtVersion = versions['dependency.management.plugin.version']

		classpath "io.spring.gradle:dependency-management-plugin:${depMgmtVersion}"
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
		classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
		classpath 'com.moowork.gradle:gradle-node-plugin:1.1.1'
		classpath 'org.ajoberstar:gradle-git-publish:0.2.1'
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5-rc1'
	}
}

wrapper {
	gradleVersion = '3.5'
}

ext {
	timestampedVersion = true
}

SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss")
if (ext.timestampedVersion) {
	version = BUILD_VERSION_PREFIX + "." + format.format(new Date())
}
else {
	version = '0.0.0-SNAPSHOT'
}
group = GROUP_ID

gradle.beforeProject { Project project ->
	project.with {
		apply plugin: 'maven'

		def docs = project.name == 'crnk-documentation'
		def ui = project.name == 'crnk-ui'
		def examples = project.name.contains('example')

		if (docs) {
			apply plugin: 'java'
			sourceCompatibility = 1.7
			targetCompatibility = 1.7

			dependencies {
				testCompile group: 'junit', name: 'junit', version: '4.12'
				testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
				testCompile group: 'org.assertj', name: 'assertj-core', version: '2.2.0'
			}
		}

		if (!docs && !examples) {
			// https://about.sonarqube.com/get-started/
			apply plugin: "org.sonarqube"
		}

		apply plugin: 'maven-publish'

		System.out.println("hi!!!!!!!!!!")
		System.err.println("hi!!!!!!!!!!")
		System.out.println(System.env.NEXUS_DEPLOY_USER);
		System.err.println(System.env.NEXUS_DEPLOY_USER);

		if (System.env.NEXUS_DEPLOY_USER) {
			publishing {
				repositories {
					maven {
						name "nexus"
						url NEXUS_DEPLOY_URL

						credentials {
							username System.env.NEXUS_DEPLOY_USER
							password System.env.NEXUS_DEPLOY_PASS
						}
					}
				}

				if (!docs && !examples) {
					task sourceJar(type: Jar) {
						from sourceSets.main.allJava
					}

					publications {
						mavenJava(MavenPublication) {
							from components.java

							if (!ui) {
								artifact sourceJar {
									classifier "sources"
								}
							}
						}
					}
				}
			}
		}

	}
}

